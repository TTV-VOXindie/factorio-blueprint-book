# This is a basic workflow to help you get started with Actions

name: 'Convert Blueprint String to JSON'

# Controls when the workflow will run
on:
  # Triggers the workflow on push to main
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      reason:
        description: 'The reason for running the workflow'
        required: true
        default: 'Manual Run'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "blueprint-string-to-json"
  blueprint-string-to-json:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      #pull-requests: write
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out code in repository
        uses: actions/checkout@v3
      
      # Log some stupid text
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"

      # Log successful checkout
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      
      # Print the reason for the manual run if it applys
      - name: 'Print Manual Run Reason'
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
            echo 'Reason: ${{ github.event.inputs.reason }}'

      - name: Convert Blueprint String to JSON
        id: blueprint-string-to-json
        uses: ./BlueprintStringToJson/BlueprintStringToJsonGitHubAction #points to action.yml
        #uses: TTV-VOXindie/factorio-blueprint-book/BlueprintStringToJson/BlueprintStringToJsonGitHubAction@main #I think @main refers to the branch
        env:
          GREETINGS: 'Hello, .NET developers!' # ${{ secrets.GITHUB_TOKEN }}
        with:
          #owner: ${{ github.repository_owner }}
          #name: ${{ github.repository }}
          #branch: ${{ github.ref }}
          dir: ${{ './Blueprint Files' }}
        
      # Write the blueprint-string-to-json outputs for logging purposes
      - name: 'Log Outputs'
        run: | #could do this in the program itself
            echo 'was-blueprint-changed: ${{ steps.blueprint-string-to-json.outputs.was-blueprint-changed }}' 
            echo 'blueprint-version: ${{ steps.blueprint-string-to-json.outputs.blueprint-version }}'
      
      # Commits changes and pushes if a commit is made
      - name: Commit Changes
        #if: steps.blueprint-string-to-json.outputs.was-blueprint-changed == 'true'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git diff --name-only --staged
          git commit -m "Automated Commit.  Blueprint Version ${{ toJSON(steps.blueprint-string-to-json.outputs.blueprint-version) }}." || exit 0
          git push
      
        #uses: peter-evans/create-pull-request@v4
        #if: ${{ steps.blueprint-string-to-json.outputs.was-blueprint-changed }} == 'true'
        #with:
          #title: '${{ steps.blueprint-string-to-json.outputs.summary-title }}'
          #body: '${{ steps.blueprint-string-to-json.outputs.summary-details }}'
          #commit-message: 'Blueprint String To JSON: automated pull request.'